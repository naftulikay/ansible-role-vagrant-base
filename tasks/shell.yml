---
# validate that the shell specified is supported
- name: validate shell
  fail: msg="Unknown shell {{ vagrant_shell }}; accepted values are [bash, zsh]."
  when: vagrant_shell not in ["bash", "zsh"]

# install user shell
- name: install user shell
  package:
    name: |-
      {% if vagrant_shell == 'bash' -%}
        {{ vagrant_bash_package }}
      {%- else -%}
        {{ vagrant_zsh_package }}
      {%- endif -%}
    state: present

# determine user's current and desired shells
- name: detect desired shell
  shell: which {{ vagrant_shell }}
  register: vagrant_desired_shell
  become: true
  become_user: "{{ vagrant_user }}"
  become_flags: -Hi
  changed_when: false

- name: detect current shell
  shell: echo $SHELL
  register: vagrant_actual_shell
  become: true
  become_user: "{{ vagrant_user }}"
  become_flags: -Hi
  changed_when: false

# determine user's home directory
- name: detect vagrant user home
  shell: echo $HOME
  register: vagrant_home_result
  become: true
  become_user: "{{ vagrant_user }}"
  become_flags: -Hi
  changed_when: false

# establish determined information
- name: set current user shell information
  set_fact:
    vagrant_user_home: "{{ vagrant_home_result.stdout_lines | first | trim }}"
    vagrant_user_shell_current: "{{ vagrant_actual_shell.stdout_lines | first | trim }}"
    vagrant_user_shell_desired: "{{ vagrant_desired_shell.stdout_lines | first | trim }}"

# set user shell
- name: set user shell
  user: name={{ vagrant_user }} shell={{ vagrant_user_shell_desired }}

# shell configuration discovery
- name: include shell-specific configuration
  include: shell/{{ vagrant_shell }}.yml

# when unable to find a shell configuration file or a shell template, fail
- name: fail when shell config file or shell template is undefined
  fail: msg="Shell configuration file and/or shell magic template are undefined."
  when: shell_config_file is undefined or shell_magic_template is undefined

# magic cd to /vagrant on login
- name: insert magic cd
  blockinfile:
    marker: "# {mark} ansible: naftulikay.vagrant-base"
    path: "{{ shell_config_file }}"
    owner: "{{ vagrant_user }}"
    group: "{{ vagrant_user }}"
    mode: "0750"
    block: "{{ shell_magic_template }}"
    create: true
  become: true
  become_user: "{{ vagrant_user }}"
  when: shell_config_file is defined and shell_magic_template is defined

# fix shell shebang; might not do anything
- name: replace shebang
  replace:
    path: "{{ shell_config_file }}"
    owner: "{{ vagrant_user }}"
    group: "{{ vagrant_user }}"
    mode: "0750"
    regexp: "{{ shebang_repl_matcher }}"
    replace: "{{ shebang }}"

# insert shebang unless present
- name: insert shebang
  lineinfile:
    path: "{{ shell_config_file }}"
    insertbefore: BOF
    line: "{{ shebang }}"
    regexp: "{{ shebang_matcher }}"
    owner: "{{ vagrant_user }}"
    group: "{{ vagrant_user }}"
    mode: "0750"
